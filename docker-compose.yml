version: '3.9'

services:
  # ====== PROXY ======
  proxy:
    image: nginx:1.24-alpine
    container_name: proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./proxy/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - backend-web
      - frontend-web
    networks:
      - app_net

  # ====== BACKEND ======
  backend-fpm:
    build:
      context: ./backend
      dockerfile: _docker/app/Dockerfile
    container_name: backend-fpm
    env_file:
      - ./.env
    volumes:
      - ./backend:/var/www/html:rw
      - ./backend/.env:/var/www/html/.env:ro
    expose:
      - '9000'
    depends_on:
      - db
    networks:
      - app_net

  backend-web:
    image: nginx:1.24-alpine
    container_name: backend-web
    depends_on:
      - backend-fpm
    volumes:
      - ./backend:/var/www/html:rw
      - ./backend/_docker/nginx/backend.conf:/etc/nginx/conf.d/default.conf:ro
    expose:
      - '80'
    networks:
      - app_net


  # ====== FRONTEND ======
  frontend-web:
    build:
      context: ./frontend
      dockerfile: _docker/app/Dockerfile
    container_name: frontend-web
    expose:
      - '80'
    networks:
      - app_net

  # ====== DATABASE ======
  db:
    image: mysql:8.0
    container_name: db
    env_file:
      - ./.env
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 5
    networks:
      - app_net

  # ====== PHPMyAdmin ======
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    depends_on:
      - db
    env_file:
      - ./.env
    environment:
      PMA_HOST: db
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '8080:80'
    networks:
      - app_net

# ===== LaravelScheduler =====
  scheduler:
    build:
      context: ./backend
      dockerfile: _docker/app/Dockerfile
    container_name: scheduler
    volumes:
      - ./backend:/var/www/html
      - ./backend/.env:/var/www/html/.env
    depends_on:
      - db
    networks:
      - app_net
    entrypoint: ["/bin/sh", "-c", "while [ true ]; do php artisan schedule:run --no-interaction; sleep 60; done"]

volumes:
  db_data:

networks:
  app_net:
    driver: bridge
